{#
/**
 * @file
 * Default page template for the My Theme theme.
 *
 * This template defines the main layout for all pages, including the header,
 * footer, and modals. Specific page templates can extend this layout and
 * override the content block.
 */
#}
<div class="layout-container">
  {# Include the site header. #}
  {% include '@mytheme/layout/header.html.twig' %}

  <main role="main" class="content-area">
    <a id="main-content" tabindex="-1"></a>
    
    {#
      The main content block.
      This will be overridden by child templates like page--front.html.twig
      and page--courses.html.twig.
    #}
    {% block content %}
      {# Default content area if not overridden. #}
    {{ page.content }}
    {% endblock %}
  </main>

  {# Course Details Modal (common to multiple pages) #}
  <div id="courseModal" class="course-modal" style="display: none;">
    <div class="course-modal-content">
      <span class="close-modal" onclick="closeCourseModal()">&times;</span>
      <div id="courseModalContent">
        <!-- Course content will be loaded here via JavaScript -->
      </div>
    </div>
  </div>

  {# Enrollment Form Modal (common to multiple pages) #}
  <div id="enrollmentModal" class="enrollment-modal" style="display: none;">
    <div class="enrollment-modal-content">
      <span class="close-modal" onclick="closeEnrollmentModal()">&times;</span>
      <div id="enrollmentFormContent">
        <h2>Enroll in <span id="enrollmentCourseTitle"></span></h2>
        <p class="enrollment-description">Please provide your details to complete the enrollment process.</p>
        
        <form id="enrollmentForm" onsubmit="submitEnrollment(event)">
          <div class="form-group">
            <label for="enrollmentName">Full Name *</label>
            <input type="text" id="enrollmentName" name="name" required placeholder="Enter your full name">
          </div>
          
          <div class="form-group">
            <label for="enrollmentEmail">Email Address *</label>
            <input type="email" id="enrollmentEmail" name="email" required placeholder="Enter your email address">
          </div>
          
          <div class="form-actions">
            <button type="button" class="cancel-button" onclick="closeEnrollmentModal()">Cancel</button>
            <button type="submit" class="submit-button">Enroll Now</button>
          </div>
        </form>
      </div>
      
      <div id="enrollmentSuccess" style="display: none;">
        <div class="success-content">
          <i class="fas fa-check-circle success-icon"></i>
          <h3>Enrollment Successful!</h3>
          <p>Thank you for enrolling in <span id="successCourseTitle"></span>.</p>
          <p>You will receive course details and further instructions via email shortly.</p>
          <button class="close-success-button" onclick="closeEnrollmentModal()">Close</button>
        </div>
      </div>
    </div>
  </div>

  {# Include the site footer. #}
  {% include '@mytheme/layout/footer.html.twig' %}
</div> 

<script>
{% if courses %}
// Course data for the modal, shared across pages.
const courseData = {
  {% for course_slug, course in courses %}
    '{{ course_slug }}': {
      title: '{{ course.title }}',
      description: '{{ course.description }}',
      image: '{{ course.image }}',
      course_date: '{{ course.course_date }}',
      available_slots: {{ course.available_slots }},
      objectives: [
        {% if course_slug == 'web-development' %}
        'Build responsive websites using HTML5 and CSS3', 'Master JavaScript ES6+ and modern frameworks', 'Learn React.js for building dynamic user interfaces', 'Understand backend development with Node.js', 'Deploy applications to production environments', 'Work with databases and APIs'

        {% elseif course_slug == 'data-science' %}
        'Master Python for data analysis', 'Learn statistical analysis and hypothesis testing', 'Build machine learning models', 'Create compelling data visualizations', 'Work with big data technologies', 'Deploy machine learning models'

        {% elseif course_slug == 'digital-marketing' %}
        'Understand digital marketing fundamentals', 'Master SEO and content optimization', 'Create effective social media strategies', 'Run successful paid advertising campaigns', 'Analyze marketing performance metrics', 'Develop comprehensive marketing plans'

        {% elseif course_slug == 'ui-ux-design' %}
        'Understand user-centered design principles', 'Master design thinking methodology', 'Create wireframes and prototypes', 'Conduct user research and testing', 'Design for accessibility and usability', 'Use modern design tools effectively'

        {% elseif course_slug == 'mobile-app-development' %}
        'Develop native iOS apps with Swift', 'Build Android apps with Kotlin', 'Create cross-platform apps with React Native', 'Implement mobile app architecture patterns', 'Integrate APIs and backend services', 'Publish apps to app stores'
        
        {% elseif course_slug == 'cloud-computing' %}
        'Master AWS, Azure, and Google Cloud platforms', 'Implement CI/CD pipelines', 'Work with Docker and Kubernetes', 'Manage infrastructure as code', 'Monitor and optimize cloud resources', 'Implement security best practices'

        {% elseif course_slug == 'cybersecurity' %}
        'Understand cybersecurity fundamentals and threats', 'Learn network security and monitoring', 'Master ethical hacking and penetration testing', 'Implement security controls and policies', 'Conduct security assessments and audits', 'Develop incident response procedures'

        {% elseif course_slug == 'artificial-intelligence' %}
        'Master machine learning algorithms and techniques', 'Build neural networks and deep learning models', 'Implement natural language processing solutions', 'Create computer vision applications', 'Deploy AI models to production', 'Understand AI ethics and responsible development'

        {% elseif course_slug == 'blockchain-development' %}
        'Understand blockchain technology and cryptocurrencies', 'Develop smart contracts with Solidity', 'Build decentralized applications (DApps)', 'Master Web3.js and blockchain APIs', 'Implement consensus mechanisms', 'Create secure blockchain solutions'

        {% elseif course_slug == 'data-analytics' %}
        'Master data analysis techniques and tools', 'Create compelling data visualizations', 'Learn statistical analysis and modeling', 'Work with big data technologies', 'Implement business intelligence solutions', 'Communicate insights effectively'

        {% elseif course_slug == 'software-testing' %}
        'Master testing methodologies and strategies', 'Implement automated testing frameworks', 'Conduct performance and load testing', 'Learn test-driven development practices', 'Master quality assurance processes', 'Use modern testing tools and platforms'

        {% elseif course_slug == 'project-management' %}
        'Master project management methodologies', 'Implement Agile and Scrum practices', 'Develop leadership and team management skills', 'Create project plans and schedules', 'Manage project risks and resources', 'Deliver successful project outcomes'{% endif %}
      ],
      audience: [
        {% if course_slug == 'web-development' %}
        'Beginners with no programming experience', 'Designers looking to learn front-end development', 'Developers wanting to upgrade their skills', 'Entrepreneurs building their own websites'

        {% elseif course_slug == 'data-science' %}
        'Analysts looking to advance their skills', 'Developers interested in AI/ML', 'Business professionals needing data insights', 'Students pursuing data science careers'

        {% elseif course_slug == 'digital-marketing' %}
        'Marketing professionals', 'Small business owners', 'Entrepreneurs and startups', 'Career changers interested in marketing'

        {% elseif course_slug == 'ui-ux-design' %}
        'Designers wanting to specialize in UX', 'Developers interested in design', 'Product managers and entrepreneurs', 'Creative professionals seeking new skills'

        {% elseif course_slug == 'mobile-app-development' %}
        'Web developers wanting to learn mobile', 'Computer science students', 'Entrepreneurs building mobile products', 'Developers seeking mobile specialization'

        {% elseif course_slug == 'cloud-computing' %}
        'System administrators', 'DevOps engineers', 'Software developers', 'IT professionals wanting cloud skills'

        {% elseif course_slug == 'cybersecurity' %}
        'IT professionals and system administrators', 'Network engineers and security analysts', 'Developers interested in security', 'Students pursuing cybersecurity careers'

        {% elseif course_slug == 'artificial-intelligence' %}
        'Data scientists and analysts', 'Software developers and engineers', 'Researchers and academics', 'Business professionals interested in AI'

        {% elseif course_slug == 'blockchain-development' %}
        'Developers interested in blockchain technology', 'Entrepreneurs building DApps', 'Financial professionals', 'Students pursuing blockchain careers'

        {% elseif course_slug == 'data-analytics' %}
        'Business analysts and data professionals', 'Managers and decision makers', 'Marketing and sales professionals', 'Students interested in analytics'

        {% elseif course_slug == 'software-testing' %}
        'Software developers and QA engineers', 'Test automation specialists', 'Project managers and team leads', 'Students pursuing testing careers'

        {% elseif course_slug == 'project-management' %}
        'Project managers and team leads', 'Business analysts and consultants', 'Entrepreneurs and startup founders', 'Professionals seeking leadership roles'{% endif %}
      ]
    }{% if not loop.last %},{% endif %}
  {% endfor %}
};

let currentCourseSlug = '';

function showCourseDetails(courseSlug, courseTitle) {
  const course = courseData[courseSlug];
  if (!course) return;

  const modal = document.getElementById('courseModal');
  const content = document.getElementById('courseModalContent');
  
  const slotsText = course.available_slots > 0 ? `${course.available_slots} slots available` : 'Not available';
  const slotsClass = course.available_slots > 0 ? 'available' : 'unavailable';
  const slotsIcon = course.available_slots > 0 ? 'fas fa-users' : 'fas fa-times-circle';
  
  content.innerHTML = `
    <div class="course-details-section">
      <div class="course-details-content">
        <div class="course-header">
          <div class="course-image">
            <img src="{{ base_path ~ directory }}/images/${course.image}" alt="${course.title}">
          </div>
          <div class="course-info">
            <h1>${course.title}</h1>
            <p class="course-description">${course.description}</p>
            <div class="course-meta">
              <div class="meta-item">
                <i class="fas fa-calendar"></i>
                <span>Course Date: ${course.course_date}</span>
              </div>
              <div class="meta-item">
                <i class="${slotsIcon}"></i>
                <span class="${slotsClass}">${slotsText}</span>
              </div>
            </div>
            <div class="course-actions">
              ${course.available_slots > 0 ? '<button class="enroll-button" onclick="showEnrollmentForm(\'' + courseSlug + '\', \'' + course.title + '\')">Enroll Now</button>' : '<span class="enroll-button disabled">Fully Booked</span>'}
            </div>
          </div>
        </div>

        <div class="course-content">
          <div class="content-section">
            <h2>What You'll Learn</h2>
            <p class="learning-objectives">
              ${course.objectives.join(', ')}
            </p>
          </div>

          <div class="content-section">
            <h2>Who This Course Is For</h2>
            <p class="audience-list">
              ${course.audience.join(', ')}
            </p>
          </div>
        </div>
      </div>
    </div>
  `;
  
  modal.style.display = 'block';
}

function closeCourseModal() {
  document.getElementById('courseModal').style.display = 'none';
}

function showEnrollmentForm(courseSlug, courseTitle) {
  currentCourseSlug = courseSlug;
  document.getElementById('enrollmentCourseTitle').textContent = courseTitle;
  document.getElementById('successCourseTitle').textContent = courseTitle;
  document.getElementById('enrollmentForm').reset();
  document.getElementById('enrollmentFormContent').style.display = 'block';
  document.getElementById('enrollmentSuccess').style.display = 'none';
  closeCourseModal();
  document.getElementById('enrollmentModal').style.display = 'block';
}

function closeEnrollmentModal() {
  document.getElementById('enrollmentModal').style.display = 'none';
}

function submitEnrollment(event) {
  event.preventDefault();
  const name = document.getElementById('enrollmentName').value;
  const email = document.getElementById('enrollmentEmail').value;
  console.log('Enrollment submitted:', { courseSlug: currentCourseSlug, name, email });
  document.getElementById('enrollmentFormContent').style.display = 'none';
  document.getElementById('enrollmentSuccess').style.display = 'block';
  setTimeout(() => {
    closeEnrollmentModal();
  }, 5000);
}

// Close modal when clicking outside of it
window.onclick = function(event) {
  const courseModal = document.getElementById('courseModal');
  const enrollmentModal = document.getElementById('enrollmentModal');
  
  if (event.target == courseModal) {
    courseModal.style.display = 'none';
  }
  
  if (event.target == enrollmentModal) {
    enrollmentModal.style.display = 'none';
  }
}

// Course filtering functionality (shared across pages)
function filterCourses() {
  const topicFilter = document.getElementById('topicFilter');
  const dateFilter = document.getElementById('dateFilter');
  
  if (!topicFilter || !dateFilter) return; // Only run if filters exist
  
  const topicValue = topicFilter.value;
  const dateValue = dateFilter.value;
  const courseCards = document.querySelectorAll('.course-card');
  let visibleCount = 0;
  
  courseCards.forEach(card => {
    const topic = card.dataset.topic;
    const date = card.dataset.date;
    let showCard = true;
    
    if (topicValue && topic !== topicValue) {
      showCard = false;
    }
    if (dateValue && !date.includes(dateValue)) {
      showCard = false;
    }
    
    if (showCard) {
      card.style.display = 'block';
      visibleCount++;
    } else {
      card.style.display = 'none';
    }
  });
  
  // Update course count
  const courseCountElement = document.getElementById('courseCount');
  if (courseCountElement) {
    courseCountElement.textContent = visibleCount;
  }
  
  // Show/hide no results message
  const noResults = document.getElementById('noResults');
  const coursesGrid = document.getElementById('coursesGrid');
  
  if (noResults && coursesGrid) {
    if (visibleCount === 0) {
      noResults.style.display = 'block';
      coursesGrid.style.display = 'none';
    } else {
      noResults.style.display = 'none';
      coursesGrid.style.display = 'grid';
    }
  }
}

function clearAllFilters() {
  const topicFilter = document.getElementById('topicFilter');
  const dateFilter = document.getElementById('dateFilter');
  
  if (topicFilter) topicFilter.value = '';
  if (dateFilter) dateFilter.value = '';
  
  filterCourses();
}

// Initialize course filtering when DOM is loaded
document.addEventListener('DOMContentLoaded', function() {
  const topicFilter = document.getElementById('topicFilter');
  const dateFilter = document.getElementById('dateFilter');
  const clearFiltersBtn = document.getElementById('clearFilters');
  
  if (topicFilter) {
    topicFilter.addEventListener('change', filterCourses);
  }
  if (dateFilter) {
    dateFilter.addEventListener('change', filterCourses);
  }
  if (clearFiltersBtn) {
    clearFiltersBtn.addEventListener('click', clearAllFilters);
  }
});
{% endif %}
</script> 